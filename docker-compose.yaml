version: '3.8'

services:
  data-analysis-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
      - ./sandbox:/app/sandbox
      - ./logs:/app/logs
      - ./examples:/app/examples
      - /var/run/docker.sock:/var/run/docker.sock  # For Docker-in-Docker
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
    restart: unless-stopped
    networks:
      - analysis-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - analysis-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Web interface for monitoring (can be removed)
  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: unless-stopped
    networks:
      - analysis-network

networks:
  analysis-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
  portainer_data:
    driver: local